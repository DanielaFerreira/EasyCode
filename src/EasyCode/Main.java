package EasyCode;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import EasyCode.BlocosEstruturais.*;
import EasyCode.BlocosFuncionais.*;
import EasyCode.BlocosArduino.*;
import EasyCode.BlocosOperadores.*;
import EasyCode.Ferramentas.*;
import EasyCode.Pais.*;
import java.awt.*;
import java.awt.event.*;
import static java.awt.event.KeyEvent.VK_ENTER;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author CCE
 */
public class Main extends javax.swing.JFrame implements MouseListener {

    //Essas variaveis apenas pegam o tamanho dos bloco, sendo que a ultima é para pegar o total de tamanho
    int x = 0, y = 0;
    int tamBlocosTotal = 0;
    //Essa Variavel armazena os blocos criados;
    ArrayList<Bloco> lista = new ArrayList();
    //////////////////////////////////////////////////////
    private Bloco alterar; //Ela funciona como um auxiliar para remover ou mover um bloco
    private String tipo = ""; // USADO P ARMAZENAR QUAL O TIPO DE VARIAVEL FOI  SELECIONAOD P INSTANCIAR
    private boolean clicado = false;
    //Array para guardar todas as variaveis já criadas
    public static ArrayList<Variavel> listaVar = new ArrayList();
    private boolean indenta = false;

    public Main() {
        super("EasyCode");
        initComponents();
        alterar = new Bloco();
        setSize(1102, 657);
        JBinicio.setOpaque(true);
        buttonGroup1.add(RBinteiro);
        buttonGroup1.add(RBreal);
        buttonGroup1.add(RBcaracter);
        RBinteiro.setSelected(true);
        RBinteiro.doClick();
        setLocationRelativeTo(null);
        setVisible(true);
        JProlagem.getVerticalScrollBar().setUnitIncrement(10);
        //Verifica se há um arquivo com o caminho do gcc, caso certo ele obtem o caminho
        try {
            Scanner in = new Scanner(new FileReader("conf.txt"));
            while (in.hasNextLine()) {
                String line = in.nextLine();
                FEBuildComp.gccPath = line;
            }
        } catch (FileNotFoundException e) {

            JOptionPane.showMessageDialog(null, "arquivo nao encontrado");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        JBHelloWorld = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTTutorial = new javax.swing.JTextArea();
        barras = new javax.swing.JTabbedPane();
        Variaveis = new javax.swing.JPanel();
        JBvariavel = new javax.swing.JButton();
        txtVar = new javax.swing.JTextField();
        RBinteiro = new javax.swing.JRadioButton();
        RBreal = new javax.swing.JRadioButton();
        RBcaracter = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        JTValorInicial = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Arduino = new javax.swing.JPanel();
        JBSetup = new javax.swing.JButton();
        JBLoop = new javax.swing.JButton();
        JBPinMode = new javax.swing.JButton();
        JBFimArduino = new javax.swing.JButton();
        JBDigitalWrite = new javax.swing.JButton();
        JBAnalogRead = new javax.swing.JButton();
        JBAnalogWrite = new javax.swing.JButton();
        JBDelay = new javax.swing.JButton();
        JBDigitalRead = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXTcompilador = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JTTutorial1 = new javax.swing.JTextArea();
        JBHelloWorld1 = new javax.swing.JButton();
        JPbackground = new javax.swing.JPanel();
        JProlagem = new javax.swing.JScrollPane();
        JPcampo = new javax.swing.JPanel();
        background = new javax.swing.JPanel();
        JTPBlocos = new javax.swing.JTabbedPane();
        JPBlocos = new javax.swing.JPanel();
        JBinicio = new javax.swing.JButton();
        JBfim = new javax.swing.JButton();
        JBse = new javax.swing.JButton();
        JBsenao = new javax.swing.JButton();
        JBescolha = new javax.swing.JButton();
        JBfaca = new javax.swing.JButton();
        JBcasoFim = new javax.swing.JButton();
        JBenquanto = new javax.swing.JButton();
        JBFimFaca = new javax.swing.JButton();
        JBpara = new javax.swing.JButton();
        JBcaso = new javax.swing.JButton();
        JBSenaoFim = new javax.swing.JButton();
        JBFimPara = new javax.swing.JButton();
        JBfimenquanto = new javax.swing.JButton();
        JBFimEscolha = new javax.swing.JButton();
        JBSeFim = new javax.swing.JButton();
        JPOperadores = new javax.swing.JPanel();
        JBIncrementa = new javax.swing.JButton();
        JBDecrementa = new javax.swing.JButton();
        JBIgualSoma = new javax.swing.JButton();
        JBIgualSubtracao = new javax.swing.JButton();
        JBIgualDivisao = new javax.swing.JButton();
        JBIgualMultiplicacao = new javax.swing.JButton();
        JBIgual = new javax.swing.JButton();
        JPFuncoes = new javax.swing.JPanel();
        JBescrevaTxt = new javax.swing.JButton();
        JBescrevaVar = new javax.swing.JButton();
        JBleia = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        JBconverte = new javax.swing.JButton();
        BRemover = new javax.swing.JButton();
        JBcima = new javax.swing.JButton();
        JBbaixo = new javax.swing.JButton();
        JBremove = new javax.swing.JButton();
        JCBcompArduino = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BTMLimparTudo = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        BTMImportar = new javax.swing.JMenuItem();
        BTMSalvar = new javax.swing.JMenuItem();
        BTMSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        JBHelloWorld.setBackground(new java.awt.Color(255, 255, 255));
        JBHelloWorld.setText("Hello World");
        JBHelloWorld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBHelloWorldActionPerformed(evt);
            }
        });

        JTTutorial.setColumns(20);
        JTTutorial.setRows(5);
        jScrollPane3.setViewportView(JTTutorial);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(JBHelloWorld, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JBHelloWorld)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        barras.setBackground(new java.awt.Color(255, 255, 255));
        barras.setForeground(new java.awt.Color(51, 51, 51));

        Variaveis.setBackground(new java.awt.Color(255, 255, 255));
        Variaveis.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JBvariavel.setBackground(new java.awt.Color(255, 255, 255));
        JBvariavel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JBvariavel.setForeground(new java.awt.Color(51, 51, 51));
        JBvariavel.setText("Criar variável");
        JBvariavel.setToolTipText("Confirmar a criação de uma variável");
        JBvariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBvariavelActionPerformed(evt);
            }
        });
        Variaveis.add(JBvariavel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        txtVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVarActionPerformed(evt);
            }
        });
        txtVar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVarKeyPressed(evt);
            }
        });
        Variaveis.add(txtVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 140, -1));

        RBinteiro.setBackground(new java.awt.Color(255, 255, 255));
        RBinteiro.setText("Inteiro");
        RBinteiro.setToolTipText("Números inteiros, positivos ou negativos");
        RBinteiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBinteiroActionPerformed(evt);
            }
        });
        Variaveis.add(RBinteiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        RBreal.setBackground(new java.awt.Color(255, 255, 255));
        RBreal.setText("Real");
        RBreal.setToolTipText("Números negativos ou positivos que possuam casas decimais");
        RBreal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBrealActionPerformed(evt);
            }
        });
        Variaveis.add(RBreal, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        RBcaracter.setBackground(new java.awt.Color(255, 255, 255));
        RBcaracter.setText("Caracter");
        RBcaracter.setToolTipText("Letras, símbolos ou números (sem valor numérico)");
        RBcaracter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBcaracterActionPerformed(evt);
            }
        });
        Variaveis.add(RBcaracter, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        jLabel4.setText("Valor inicial:");
        jLabel4.setAlignmentY(0.6F);
        Variaveis.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 80, 20));

        JTValorInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTValorInicialKeyPressed(evt);
            }
        });
        Variaveis.add(JTValorInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 100, -1));

        jLabel5.setText("Nome da variável:");
        jLabel5.setAlignmentY(0.6F);
        Variaveis.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, 20));

        barras.addTab("Criação de variaveis", Variaveis);

        Arduino.setBackground(new java.awt.Color(255, 255, 255));
        Arduino.setLayout(null);

        JBSetup.setBackground(new java.awt.Color(255, 255, 255));
        JBSetup.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBSetup.setText("Configurar");
        JBSetup.setToolTipText("");
        JBSetup.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBSetup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBSetup.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBSetup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBSetupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBSetupMouseExited(evt);
            }
        });
        JBSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSetupActionPerformed(evt);
            }
        });
        Arduino.add(JBSetup);
        JBSetup.setBounds(20, 10, 100, 30);

        JBLoop.setBackground(new java.awt.Color(255, 255, 255));
        JBLoop.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBLoop.setText("Repetir");
        JBLoop.setToolTipText("");
        JBLoop.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBLoop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBLoop.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBLoop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBLoopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBLoopMouseExited(evt);
            }
        });
        JBLoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBLoopActionPerformed(evt);
            }
        });
        Arduino.add(JBLoop);
        JBLoop.setBounds(20, 50, 100, 30);

        JBPinMode.setBackground(new java.awt.Color(255, 255, 255));
        JBPinMode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBPinMode.setText("Pino/Modo");
        JBPinMode.setToolTipText("");
        JBPinMode.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBPinMode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBPinMode.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBPinMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBPinModeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBPinModeMouseExited(evt);
            }
        });
        JBPinMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBPinModeActionPerformed(evt);
            }
        });
        Arduino.add(JBPinMode);
        JBPinMode.setBounds(140, 10, 100, 30);

        JBFimArduino.setBackground(new java.awt.Color(255, 255, 255));
        JBFimArduino.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBFimArduino.setText("Fim");
        JBFimArduino.setToolTipText("");
        JBFimArduino.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBFimArduino.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBFimArduino.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBFimArduino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBFimArduinoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBFimArduinoMouseExited(evt);
            }
        });
        JBFimArduino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBFimArduinoActionPerformed(evt);
            }
        });
        Arduino.add(JBFimArduino);
        JBFimArduino.setBounds(140, 50, 100, 30);

        JBDigitalWrite.setBackground(new java.awt.Color(255, 255, 255));
        JBDigitalWrite.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBDigitalWrite.setText("Saída Digital");
        JBDigitalWrite.setToolTipText("");
        JBDigitalWrite.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBDigitalWrite.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBDigitalWrite.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBDigitalWrite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBDigitalWriteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBDigitalWriteMouseExited(evt);
            }
        });
        JBDigitalWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDigitalWriteActionPerformed(evt);
            }
        });
        Arduino.add(JBDigitalWrite);
        JBDigitalWrite.setBounds(260, 50, 120, 30);

        JBAnalogRead.setBackground(new java.awt.Color(255, 255, 255));
        JBAnalogRead.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBAnalogRead.setText("Entrada Analógica");
        JBAnalogRead.setToolTipText("");
        JBAnalogRead.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBAnalogRead.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBAnalogRead.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBAnalogRead.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBAnalogReadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBAnalogReadMouseExited(evt);
            }
        });
        JBAnalogRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAnalogReadActionPerformed(evt);
            }
        });
        Arduino.add(JBAnalogRead);
        JBAnalogRead.setBounds(400, 10, 140, 30);

        JBAnalogWrite.setBackground(new java.awt.Color(255, 255, 255));
        JBAnalogWrite.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBAnalogWrite.setText("Saída Analógica");
        JBAnalogWrite.setToolTipText("");
        JBAnalogWrite.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBAnalogWrite.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBAnalogWrite.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBAnalogWrite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBAnalogWriteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBAnalogWriteMouseExited(evt);
            }
        });
        JBAnalogWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAnalogWriteActionPerformed(evt);
            }
        });
        Arduino.add(JBAnalogWrite);
        JBAnalogWrite.setBounds(400, 50, 140, 30);

        JBDelay.setBackground(new java.awt.Color(255, 255, 255));
        JBDelay.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBDelay.setText("Esperar");
        JBDelay.setToolTipText("");
        JBDelay.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBDelay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBDelay.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBDelay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBDelayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBDelayMouseExited(evt);
            }
        });
        JBDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDelayActionPerformed(evt);
            }
        });
        Arduino.add(JBDelay);
        JBDelay.setBounds(560, 10, 100, 30);

        JBDigitalRead.setBackground(new java.awt.Color(255, 255, 255));
        JBDigitalRead.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBDigitalRead.setText("Entrada Digital");
        JBDigitalRead.setToolTipText("");
        JBDigitalRead.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBDigitalRead.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBDigitalRead.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBDigitalRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDigitalReadActionPerformed(evt);
            }
        });
        Arduino.add(JBDigitalRead);
        JBDigitalRead.setBounds(260, 10, 120, 30);

        barras.addTab("Arduino", Arduino);

        getContentPane().add(barras);
        barras.setBounds(0, 0, 1100, 120);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jPanel2.setOpaque(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Código-fonte");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        TXTcompilador.setEditable(false);
        TXTcompilador.setBackground(new java.awt.Color(247, 247, 247));
        TXTcompilador.setColumns(20);
        TXTcompilador.setRows(5);
        jScrollPane1.setViewportView(TXTcompilador);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Código", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        JTTutorial1.setColumns(20);
        JTTutorial1.setRows(5);
        jScrollPane4.setViewportView(JTTutorial1);

        JBHelloWorld1.setBackground(new java.awt.Color(204, 255, 204));
        JBHelloWorld1.setText("Clique aqui");
        JBHelloWorld1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBHelloWorld1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBHelloWorld1MouseExited(evt);
            }
        });
        JBHelloWorld1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBHelloWorld1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(JBHelloWorld1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(JBHelloWorld1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tutorial", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(790, 120, 310, 490);

        JPbackground.setBackground(new java.awt.Color(234, 234, 234));
        JPbackground.setPreferredSize(new java.awt.Dimension(1102, 636));
        JPbackground.setLayout(null);

        JProlagem.setBackground(new java.awt.Color(255, 255, 255));

        JPcampo.setBackground(new java.awt.Color(255, 255, 255));
        JPcampo.setLayout(null);
        JProlagem.setViewportView(JPcampo);

        JPbackground.add(JProlagem);
        JProlagem.setBounds(270, 160, 510, 440);

        background.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        JPbackground.add(background);
        background.setBounds(2, 0, 1100, 100);

        JPBlocos.setBackground(new java.awt.Color(255, 255, 255));
        JPBlocos.setLayout(null);

        JBinicio.setBackground(new java.awt.Color(255, 255, 255));
        JBinicio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBinicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/start.png"))); // NOI18N
        JBinicio.setText("Início");
        JBinicio.setToolTipText("| inicio | int main(){ | Estrutura para iniciar um programa.");
        JBinicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBinicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBinicio.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBinicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBinicioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBinicioMouseExited(evt);
            }
        });
        JBinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBinicioActionPerformed(evt);
            }
        });
        JPBlocos.add(JBinicio);
        JBinicio.setBounds(40, 20, 80, 60);

        JBfim.setBackground(new java.awt.Color(255, 255, 255));
        JBfim.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBfim.setText("Fim");
        JBfim.setToolTipText("| fim; | } | Estrutura para fechar a estrutura de inicio.\n");
        JBfim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBfimMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBfimMouseExited(evt);
            }
        });
        JBfim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBfimActionPerformed(evt);
            }
        });
        JPBlocos.add(JBfim);
        JBfim.setBounds(120, 20, 80, 60);

        JBse.setBackground(new java.awt.Color(255, 255, 255));
        JBse.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/se.png"))); // NOI18N
        JBse.setText("Se");
        JBse.setToolTipText("| se <condicao> faca | if(<condicao>) { |  Estrutura de seleção Se.");
        JBse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBse.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBseMouseExited(evt);
            }
        });
        JBse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBseActionPerformed(evt);
            }
        });
        JPBlocos.add(JBse);
        JBse.setBounds(40, 90, 80, 90);

        JBsenao.setBackground(new java.awt.Color(255, 255, 255));
        JBsenao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBsenao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/senao.png"))); // NOI18N
        JBsenao.setText("Senão");
        JBsenao.setToolTipText("| senao | else { | Estrutura complementar do Se.");
        JBsenao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBsenao.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBsenao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBsenaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBsenaoMouseExited(evt);
            }
        });
        JBsenao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBsenaoActionPerformed(evt);
            }
        });
        JPBlocos.add(JBsenao);
        JBsenao.setBounds(120, 90, 80, 90);

        JBescolha.setBackground(new java.awt.Color(255, 255, 255));
        JBescolha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBescolha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/escolha_1.png"))); // NOI18N
        JBescolha.setText("Escolha");
        JBescolha.setToolTipText("| escolha <valor> | switch (<valor>) { | Estrutura de Seleção Escolha.");
        JBescolha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBescolha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBescolha.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        JBescolha.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBescolha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBescolhaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBescolhaMouseExited(evt);
            }
        });
        JBescolha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBescolhaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBescolha);
        JBescolha.setBounds(20, 220, 70, 90);

        JBfaca.setBackground(new java.awt.Color(255, 255, 255));
        JBfaca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBfaca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/faca.png"))); // NOI18N
        JBfaca.setText("Faça");
        JBfaca.setToolTipText("| faca { | do { | Estrutura de Repetição Faça-Enquanto.");
        JBfaca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBfaca.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBfaca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBfacaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBfacaMouseExited(evt);
            }
        });
        JBfaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBfacaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBfaca);
        JBfaca.setBounds(160, 350, 70, 60);

        JBcasoFim.setBackground(new java.awt.Color(255, 255, 255));
        JBcasoFim.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBcasoFim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/fimCaso.png"))); // NOI18N
        JBcasoFim.setText("FimCaso");
        JBcasoFim.setToolTipText("| fimCaso | break; | Estrutura complementar do Escolha.");
        JBcasoFim.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBcasoFim.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBcasoFim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBcasoFimMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBcasoFimMouseExited(evt);
            }
        });
        JBcasoFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcasoFimActionPerformed(evt);
            }
        });
        JPBlocos.add(JBcasoFim);
        JBcasoFim.setBounds(160, 220, 70, 120);

        JBenquanto.setBackground(new java.awt.Color(255, 255, 255));
        JBenquanto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBenquanto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/enquanto.png"))); // NOI18N
        JBenquanto.setText("Enquanto");
        JBenquanto.setToolTipText("| esquanto <condicao> | while (<condicao>) { | Estrutura de repetição Enquanto.");
        JBenquanto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBenquanto.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBenquanto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBenquantoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBenquantoMouseExited(evt);
            }
        });
        JBenquanto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBenquantoActionPerformed(evt);
            }
        });
        JPBlocos.add(JBenquanto);
        JBenquanto.setBounds(20, 350, 70, 60);

        JBFimFaca.setBackground(new java.awt.Color(255, 255, 255));
        JBFimFaca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBFimFaca.setText("FimBloco");
        JBFimFaca.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBFimFaca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBFimFacaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBFimFacaMouseExited(evt);
            }
        });
        JBFimFaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBFimFacaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBFimFaca);
        JBFimFaca.setBounds(160, 410, 70, 30);

        JBpara.setBackground(new java.awt.Color(255, 255, 255));
        JBpara.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBpara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Para.png"))); // NOI18N
        JBpara.setText("Para");
        JBpara.setToolTipText("|para <recebe> ate <condicao> passo<incremento> | for (<recebe>;<condicao>;<incremento> ) { | Estrutura de repetição Para.");
        JBpara.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBpara.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBpara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBparaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBparaMouseExited(evt);
            }
        });
        JBpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBparaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBpara);
        JBpara.setBounds(90, 350, 70, 60);

        JBcaso.setBackground(new java.awt.Color(255, 255, 255));
        JBcaso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBcaso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/caso.png"))); // NOI18N
        JBcaso.setText("Caso");
        JBcaso.setToolTipText("| caso<condicao>: | case<condicao>: | Estrutura complementar do Escolha.");
        JBcaso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBcaso.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBcaso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBcasoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBcasoMouseExited(evt);
            }
        });
        JBcaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcasoActionPerformed(evt);
            }
        });
        JPBlocos.add(JBcaso);
        JBcaso.setBounds(90, 220, 70, 120);

        JBSenaoFim.setBackground(new java.awt.Color(255, 255, 255));
        JBSenaoFim.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBSenaoFim.setText("FimBloco");
        JBSenaoFim.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBSenaoFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSenaoFimActionPerformed(evt);
            }
        });
        JPBlocos.add(JBSenaoFim);
        JBSenaoFim.setBounds(120, 180, 80, 30);

        JBFimPara.setBackground(new java.awt.Color(255, 255, 255));
        JBFimPara.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBFimPara.setText("FimBloco");
        JBFimPara.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBFimPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBFimParaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBFimPara);
        JBFimPara.setBounds(90, 410, 70, 30);

        JBfimenquanto.setBackground(new java.awt.Color(255, 255, 255));
        JBfimenquanto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBfimenquanto.setText("FimBloco");
        JBfimenquanto.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBfimenquanto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBfimenquantoActionPerformed(evt);
            }
        });
        JPBlocos.add(JBfimenquanto);
        JBfimenquanto.setBounds(20, 410, 70, 30);

        JBFimEscolha.setBackground(new java.awt.Color(255, 255, 255));
        JBFimEscolha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBFimEscolha.setText("FimBloco");
        JBFimEscolha.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBFimEscolha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBFimEscolhaActionPerformed(evt);
            }
        });
        JPBlocos.add(JBFimEscolha);
        JBFimEscolha.setBounds(20, 310, 70, 30);

        JBSeFim.setBackground(new java.awt.Color(255, 255, 255));
        JBSeFim.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JBSeFim.setText("FimBloco");
        JBSeFim.setToolTipText("| fimEnquanto | } |  Estrutura para finalizar a estrutura de repetição Enquanto.");
        JBSeFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSeFimActionPerformed(evt);
            }
        });
        JPBlocos.add(JBSeFim);
        JBSeFim.setBounds(40, 180, 80, 30);

        JTPBlocos.addTab("Blocos", JPBlocos);

        JPOperadores.setBackground(new java.awt.Color(255, 255, 255));

        JBIncrementa.setBackground(new java.awt.Color(255, 255, 255));
        JBIncrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Incrementar.png"))); // NOI18N
        JBIncrementa.setText("Incrementar");
        JBIncrementa.setToolTipText("Incrementar");
        JBIncrementa.setFocusPainted(false);
        JBIncrementa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIncrementa.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIncrementa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIncrementaActionPerformed(evt);
            }
        });

        JBDecrementa.setBackground(new java.awt.Color(255, 255, 255));
        JBDecrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Decrementar.png"))); // NOI18N
        JBDecrementa.setText("Decrementar");
        JBDecrementa.setToolTipText("Decrementar");
        JBDecrementa.setFocusPainted(false);
        JBDecrementa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBDecrementa.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBDecrementa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDecrementaActionPerformed(evt);
            }
        });

        JBIgualSoma.setBackground(new java.awt.Color(255, 255, 255));
        JBIgualSoma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Aumentar.png"))); // NOI18N
        JBIgualSoma.setText("Aumentar");
        JBIgualSoma.setToolTipText("Atribuir uma soma.");
        JBIgualSoma.setFocusPainted(false);
        JBIgualSoma.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIgualSoma.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIgualSoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIgualSomaActionPerformed(evt);
            }
        });

        JBIgualSubtracao.setBackground(new java.awt.Color(255, 255, 255));
        JBIgualSubtracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Diminuir.png"))); // NOI18N
        JBIgualSubtracao.setText("Diminuir");
        JBIgualSubtracao.setToolTipText("Atribuir uma subtração.");
        JBIgualSubtracao.setFocusPainted(false);
        JBIgualSubtracao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIgualSubtracao.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIgualSubtracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIgualSubtracaoActionPerformed(evt);
            }
        });

        JBIgualDivisao.setBackground(new java.awt.Color(255, 255, 255));
        JBIgualDivisao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/Dividir.png"))); // NOI18N
        JBIgualDivisao.setText("Dividir");
        JBIgualDivisao.setToolTipText("Atribuir uma divisão.");
        JBIgualDivisao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIgualDivisao.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIgualDivisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIgualDivisaoActionPerformed(evt);
            }
        });

        JBIgualMultiplicacao.setBackground(new java.awt.Color(255, 255, 255));
        JBIgualMultiplicacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/multiplicar.png"))); // NOI18N
        JBIgualMultiplicacao.setText("Multiplicar");
        JBIgualMultiplicacao.setToolTipText("Atribuir uma multiplicação.");
        JBIgualMultiplicacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIgualMultiplicacao.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIgualMultiplicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIgualMultiplicacaoActionPerformed(evt);
            }
        });

        JBIgual.setBackground(new java.awt.Color(255, 255, 255));
        JBIgual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/receber.png"))); // NOI18N
        JBIgual.setText("Receber");
        JBIgual.setToolTipText("Atribuir um valor.");
        JBIgual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBIgual.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        JBIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIgualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPOperadoresLayout = new javax.swing.GroupLayout(JPOperadores);
        JPOperadores.setLayout(JPOperadoresLayout);
        JPOperadoresLayout.setHorizontalGroup(
            JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPOperadoresLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPOperadoresLayout.createSequentialGroup()
                        .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JBIncrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBIgualSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBIgualDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JBDecrementa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBIgualSubtracao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBIgualMultiplicacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPOperadoresLayout.createSequentialGroup()
                        .addComponent(JBIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))))
        );
        JPOperadoresLayout.setVerticalGroup(
            JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPOperadoresLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JBDecrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBIncrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBIgualSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPOperadoresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JBIgualSubtracao, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBIgualDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPOperadoresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JBIgualMultiplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        JTPBlocos.addTab("Operadores", JPOperadores);

        JPFuncoes.setBackground(new java.awt.Color(255, 255, 255));

        JBescrevaTxt.setBackground(new java.awt.Color(255, 255, 255));
        JBescrevaTxt.setText("Escrever um texto");
        JBescrevaTxt.setToolTipText("| escreva(\"texto\"); | C:  printf(\"text\"); | Escrever um texto no programa.");
        JBescrevaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBescrevaTxtActionPerformed(evt);
            }
        });

        JBescrevaVar.setBackground(new java.awt.Color(255, 255, 255));
        JBescrevaVar.setText("Escrever uma variável");
        JBescrevaVar.setToolTipText("| escreva(\"valor:\",inteiro); | C:  printf(\"valor:%d\",inteiro); | Escrever ma variável no programa.");
        JBescrevaVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBescrevaVarActionPerformed(evt);
            }
        });

        JBleia.setBackground(new java.awt.Color(255, 255, 255));
        JBleia.setText("Ler uma variável");
        JBleia.setToolTipText("| leia(inteiro); | C:  scanf(\"%d\",&inteiro); | Ler uma variável.");
        JBleia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBleiaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Funções();");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel3.setFocusCycleRoot(true);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout JPFuncoesLayout = new javax.swing.GroupLayout(JPFuncoes);
        JPFuncoes.setLayout(JPFuncoesLayout);
        JPFuncoesLayout.setHorizontalGroup(
            JPFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPFuncoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
            .addGroup(JPFuncoesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(JPFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JBescrevaVar, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(JBescrevaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBleia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 30, Short.MAX_VALUE))
        );
        JPFuncoesLayout.setVerticalGroup(
            JPFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPFuncoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(JBescrevaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(JBescrevaVar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(JBleia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        JTPBlocos.addTab("Funções", JPFuncoes);

        JPbackground.add(JTPBlocos);
        JTPBlocos.setBounds(10, 130, 250, 490);

        JBconverte.setBackground(new java.awt.Color(0, 255, 0));
        JBconverte.setForeground(new java.awt.Color(51, 51, 51));
        JBconverte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/play.png"))); // NOI18N
        JBconverte.setToolTipText("Compilar e Executar");
        JBconverte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBconverteActionPerformed(evt);
            }
        });
        JPbackground.add(JBconverte);
        JBconverte.setBounds(280, 130, 28, 25);

        BRemover.setBackground(new java.awt.Color(255, 255, 255));
        BRemover.setForeground(new java.awt.Color(51, 51, 51));
        BRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/delete.png"))); // NOI18N
        BRemover.setToolTipText("Excluir Bloco\n");
        BRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRemoverActionPerformed(evt);
            }
        });
        JPbackground.add(BRemover);
        BRemover.setBounds(750, 130, 28, 25);

        JBcima.setBackground(new java.awt.Color(255, 255, 255));
        JBcima.setForeground(new java.awt.Color(51, 51, 51));
        JBcima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/up.png"))); // NOI18N
        JBcima.setToolTipText("Compilar e Executar");
        JBcima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcimaActionPerformed(evt);
            }
        });
        JPbackground.add(JBcima);
        JBcima.setBounds(520, 130, 28, 25);

        JBbaixo.setBackground(new java.awt.Color(255, 255, 255));
        JBbaixo.setForeground(new java.awt.Color(51, 51, 51));
        JBbaixo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/down.png"))); // NOI18N
        JBbaixo.setToolTipText("Compilar e Executar");
        JBbaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBbaixoActionPerformed(evt);
            }
        });
        JPbackground.add(JBbaixo);
        JBbaixo.setBounds(550, 130, 28, 25);

        JBremove.setBackground(new java.awt.Color(255, 100, 100));
        JBremove.setForeground(new java.awt.Color(51, 51, 51));
        JBremove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EasyCode/Icons/cancel.png"))); // NOI18N
        JBremove.setToolTipText("Excluir um bloco selecionado");
        JBremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBremoveActionPerformed(evt);
            }
        });
        JPbackground.add(JBremove);
        JBremove.setBounds(470, 130, 28, 25);

        JCBcompArduino.setText("Compilação Arduino");
        JCBcompArduino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBcompArduinoActionPerformed(evt);
            }
        });
        JPbackground.add(JCBcompArduino);
        JCBcompArduino.setBounds(320, 130, 140, 23);

        getContentPane().add(JPbackground);
        JPbackground.setBounds(0, 0, 1100, 610);

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setToolTipText("");

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setBorder(null);
        jMenu1.setText("Arquivo");

        BTMLimparTudo.setText("Limpar tudo");
        BTMLimparTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTMLimparTudoActionPerformed(evt);
            }
        });
        jMenu1.add(BTMLimparTudo);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Compilar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        BTMImportar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        BTMImportar.setText("Importar");
        BTMImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTMImportarActionPerformed(evt);
            }
        });
        jMenu1.add(BTMImportar);

        BTMSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        BTMSalvar.setText("Salvar");
        BTMSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTMSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(BTMSalvar);

        BTMSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        BTMSair.setText("Sair");
        BTMSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTMSairActionPerformed(evt);
            }
        });
        jMenu1.add(BTMSair);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setBorder(null);
        jMenu2.setText("Configuração");

        jMenuItem1.setText("Alterar caminho do GCC");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem3.setText("Alterar caminho Arduino Debug");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //reorganiza os blocos apos uma alteração na parte grafica

    private void reorganiza() {
        JPcampo.removeAll();
        x = 0;
        y = 0;
        setSize(getWidth() + 1, getHeight() + 1);
        setSize(getWidth() - 1, getHeight() - 1);
        tamBlocosTotal = 0;
        for (int i = 0; i < lista.size(); i++) {
            JPcampo.add(lista.get(i));
            y += lista.get(i).getHeight() + 4;
            tamBlocosTotal += lista.get(i).getHeight() + 4;
            repaint();
        }
        if (indenta) {
            x += lista.get(lista.size() - 1).getWidth() / 8;
        } else {
            x = lista.get(0).getWidth() / 8;
        }
        lista.get(lista.size() - 1).setLocation(x, y);
        if (JPcampo.getHeight() <= tamBlocosTotal) {
            JPcampo.setPreferredSize(new Dimension(JPcampo.getWidth(), JPcampo.getHeight() + 200));
        }
        TXTcompilador.setText(FEConversor.imprime(lista, listaVar, JCBcompArduino.isSelected()));
    }

    ////////////////////////////////////////////////////////////////////////////
    //Essas Funções servem para criar os blocos
    private void JBinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBinicioActionPerformed

        BInicio b = new BInicio();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);

        //
        indenta = false;
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBinicioActionPerformed

    private void JBfimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBfimActionPerformed

        BFim b = new BFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        indenta = false;
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBfimActionPerformed

    private void JBescolhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBescolhaActionPerformed
        BEscolha b = new BEscolha();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBescolhaActionPerformed

    private void JBseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBseActionPerformed

        BSe b = new BSe();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBseActionPerformed
    ///////////////////////////////////////////////////////////////////////////
    //Função para apagar todos os blocos presentes
    private void BRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRemoverActionPerformed

        int op = JOptionPane.showConfirmDialog(null, "Deseja limpar o editor?", "Limpar o Editor", JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            JPcampo.removeAll();
            lista.clear();
            repaint();
            lista.clear();
            listaVar.clear();
            TXTcompilador.setText("");
        }

    }//GEN-LAST:event_BRemoverActionPerformed

    //Função que traz toda compilação e saída
    private void JBconverteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBconverteActionPerformed
        FEBuildComp buildComp = new FEBuildComp();
        if (JCBcompArduino.isSelected() == true) {
            try {
                buildComp.compBuildArduino(lista, listaVar);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            try {
                buildComp.compBuild(lista, listaVar);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_JBconverteActionPerformed

    //na sessão de criação de uma variavel se uma box for clicada ela muda o tipo de criação para real
    private void RBrealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBrealActionPerformed
        tipo = "Real";
    }//GEN-LAST:event_RBrealActionPerformed
    //apenas detalhe da parte gráfica, mudando a cor de um botão quando passar o mouse
    private void JBinicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBinicioMouseEntered
        // TODO add your handling code here:
        JBinicio.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBinicioMouseEntered

    private void JBinicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBinicioMouseExited
        // TODO add your handling code here:
        JBinicio.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBinicioMouseExited

    private void JBfimMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBfimMouseEntered
        // TODO add your handling code here:
        JBfim.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBfimMouseEntered

    private void JBfimMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBfimMouseExited
        // TODO add your handling code here:
        JBfim.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBfimMouseExited
    ///

    private void JBparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBparaActionPerformed
        BPara b = new BPara();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        reorganiza();
    }//GEN-LAST:event_JBparaActionPerformed

    private void JBseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBseMouseEntered
        // TODO add your handling code here:
        JBse.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBseMouseEntered

    private void JBseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBseMouseExited
        // TODO add your handling code here:
        JBse.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBseMouseExited

    private void JBescolhaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBescolhaMouseEntered
        // TODO add your handling code here:
        JBescolha.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBescolhaMouseEntered

    private void JBescolhaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBescolhaMouseExited
        // TODO add your handling code here:
        JBescolha.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBescolhaMouseExited

    private void JBparaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBparaMouseEntered
        // TODO add your handling code here:
        JBpara.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBparaMouseEntered

    private void JBparaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBparaMouseExited
        // TODO add your handling code here:
        JBpara.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBparaMouseExited

    private void JBfacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBfacaActionPerformed
        BFaca b = new BFaca();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
    }//GEN-LAST:event_JBfacaActionPerformed

    private void JBcasoFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcasoFimActionPerformed
        // TODO add your handling code here:
        BEscolhaCasoFim caso = new BEscolhaCasoFim();
        lista.add(caso);
        JPcampo.add(caso);
        caso.addMouseListener(this);
        //
        reorganiza();
    }//GEN-LAST:event_JBcasoFimActionPerformed

    private void JBfacaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBfacaMouseEntered
        // TODO add your handling code here:
        JBfaca.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBfacaMouseEntered

    private void JBfacaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBfacaMouseExited
        // TODO add your handling code here:
        JBfaca.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBfacaMouseExited

    private void JBcasoFimMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBcasoFimMouseEntered
        // TODO add your handling code here:
        JBcasoFim.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBcasoFimMouseEntered

    private void JBcasoFimMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBcasoFimMouseExited
        // TODO add your handling code here:]
        JBcasoFim.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBcasoFimMouseExited
    /*
    Processo de criação da variavle que também impede criar variaveis com o mesmo
    nome
     */
    private void JBvariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBvariavelActionPerformed
        if (FEVariavel.validarTexto(txtVar.getText()));
        Variavel vars[] = FEVariavel.criarVariavel(lista, txtVar, tipo);
        for (int cont1 = 0; cont1 < vars.length; cont1++) {
            JPcampo.add(vars[cont1]);
            JPcampo.getComponent(JPcampo.getComponentCount() - 1).addMouseListener(this);
        }
        if (JTValorInicial.getText() != "") {
            BOpIgual b = new BOpIgual(txtVar.getText(), JTValorInicial.getText());
            lista.add(b);
            JPcampo.add(b);
            b.addMouseListener(this);
            JTValorInicial.setText("");
        }
        indenta = true;
        System.out.println(JTValorInicial.getText());
        reorganiza();
        JPcampo.repaint();
        txtVar.setText("");
        buttonGroup1.getSelection().setSelected(true);
        txtVar.requestFocus();

    }//GEN-LAST:event_JBvariavelActionPerformed
    //na sessão de criação de uma variavel se uma box for clicada ela muda o tipo de criação para inteiro
    private void RBinteiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBinteiroActionPerformed
        tipo = "Inteiro";
    }//GEN-LAST:event_RBinteiroActionPerformed
    //na sessão de criação de uma variavel se uma box for clicada ela muda o tipo de criação para caracter
    private void RBcaracterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBcaracterActionPerformed
        tipo = "Caracter";
    }//GEN-LAST:event_RBcaracterActionPerformed

    //Escreve todo código na Area de Texto
    private void JBescrevaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBescrevaTxtActionPerformed
        BFEscrevaTXT b = new BFEscrevaTXT();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        indenta = true;
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBescrevaTxtActionPerformed
    //com defeito
    private void JBleiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBleiaActionPerformed
        if (listaVar.isEmpty() == true) {
            return;
        }
        BFLeia b = new BFLeia();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBleiaActionPerformed
    //CRIAÇÃO DE BLOCOS OPERACIONAIS
    private void JBDecrementaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDecrementaActionPerformed
        BOpDecrementa b = new BOpDecrementa();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBDecrementaActionPerformed

    private void JBIncrementaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIncrementaActionPerformed
        BOpIncrementa b = new BOpIncrementa();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIncrementaActionPerformed

    private void JBIgualSomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIgualSomaActionPerformed
        BOpIgualSoma b = new BOpIgualSoma();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIgualSomaActionPerformed

    private void JBIgualSubtracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIgualSubtracaoActionPerformed
        BOpIgualSubtracao b = new BOpIgualSubtracao();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIgualSubtracaoActionPerformed

    private void JBIgualDivisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIgualDivisaoActionPerformed
        BOpIgualDivisao b = new BOpIgualDivisao();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIgualDivisaoActionPerformed

    private void JBIgualMultiplicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIgualMultiplicacaoActionPerformed
        BOpIgualMultiplicacao b = new BOpIgualMultiplicacao();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIgualMultiplicacaoActionPerformed

    private void JBIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIgualActionPerformed
        BOpIgual b = new BOpIgual();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBIgualActionPerformed
    //CRIAÇÃO DE BLOCOS DE FUNÇÕES com apenas uma função
    private void JBescrevaVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBescrevaVarActionPerformed
        // TODO add your handling code here:
        if (listaVar.isEmpty() == true) {
            return;
        }
        BFEscrevaVar b = new BFEscrevaVar();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBescrevaVarActionPerformed

    private void BTMLimparTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTMLimparTudoActionPerformed
        // TODO add your handling code here:
        BRemover.doClick();
    }//GEN-LAST:event_BTMLimparTudoActionPerformed

    private void BTMSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTMSairActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "Deseja finalizar o programa?", "Finalizar programa", JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            try {
                dispose();
            } catch (Throwable ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_BTMSairActionPerformed

    private void JBHelloWorldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBHelloWorldActionPerformed
        // TODO add your handling code here:
        BRemover.doClick();
        JTTutorial.setText("--TUTORIAL--\n"
                + "> Vá para sessão de blocos;\n"
                + "> Adicione o botão de início;\n"
                + "> Vá para sessão de funções;\n"
                + "> Adicione o botão de escreva;\n"
                + "> Digite \"Hello World\" no botão adicionado;\n"
                + "> Volte para sessão de blocos;\n"
                + "> Adicione o botão de fim;\n"
                + "> Compile o projeto;\n");
    }//GEN-LAST:event_JBHelloWorldActionPerformed

    private void JBsenaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBsenaoMouseEntered
        JBsenao.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBsenaoMouseEntered

    private void JBsenaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBsenaoMouseExited
        JBsenao.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBsenaoMouseExited

    private void JBsenaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBsenaoActionPerformed
        BSenao b = new BSenao();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();

    }//GEN-LAST:event_JBsenaoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        FEBuildComp.setGCCPath();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void txtVarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVarKeyPressed
        // TODO add your handling code here:
        int bt = evt.getKeyCode();
        if (bt == VK_ENTER) {
            JBvariavel.doClick();
        }
        if (evt.getModifiers() == KeyEvent.CTRL_MASK) {
            if (evt.getKeyCode() == KeyEvent.VK_1) {
                RBinteiro.doClick();
            } else if (evt.getKeyCode() == KeyEvent.VK_2) {
                RBreal.doClick();
            } else if (evt.getKeyCode() == KeyEvent.VK_3) {
                RBcaracter.doClick();
            }
        }
    }//GEN-LAST:event_txtVarKeyPressed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        FEBuildComp buildComp = new FEBuildComp();
        try {
            buildComp.compBuild(lista, listaVar);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void JBcasoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBcasoMouseEntered
        JBcaso.setBackground(new Color(217, 255, 255)); // TODO add your handling code here:
    }//GEN-LAST:event_JBcasoMouseEntered

    private void JBcasoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBcasoMouseExited
        JBcaso.setBackground(new Color(255, 255, 255)); // TODO add your handling code here:
    }//GEN-LAST:event_JBcasoMouseExited

    private void JBcasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcasoActionPerformed
        // TODO add your handling code here:
        BEscolhaCaso caso = new BEscolhaCaso();
        lista.add(caso);
        JPcampo.add(caso);
        caso.addMouseListener(this);
        reorganiza();
    }//GEN-LAST:event_JBcasoActionPerformed

    private void JBenquantoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBenquantoActionPerformed

        BEnquanto b = new BEnquanto();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBenquantoActionPerformed

    private void JBenquantoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBenquantoMouseExited
        // TODO add your handling code here:
        JBenquanto.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBenquantoMouseExited

    private void JBenquantoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBenquantoMouseEntered
        // TODO add your handling code here:
        JBenquanto.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBenquantoMouseEntered

    private void JBcimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcimaActionPerformed
        for (int i = 0; i <= lista.size() - 1; i++) {
            if (lista.get(i).equals(alterar)) {
                if (i > 0) {
                    Bloco aux;
                    aux = lista.get(i - 1);
                    lista.remove(i - 1);
                    lista.add(i - 1, alterar);
                    lista.remove(i);
                    lista.add(i, aux);
                    clicado = false;
                    reorganiza();
                    return;
                }
            }
        }

    }//GEN-LAST:event_JBcimaActionPerformed

    private void JBbaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBbaixoActionPerformed

        for (int i = 0; i <= lista.size() - 1; i++) {
            if (lista.get(i).equals(alterar)) {
                if (i < lista.size() - 1) {
                    Bloco aux;
                    aux = lista.get(i + 1);
                    lista.remove(i + 1);
                    lista.add(i + 1, alterar);
                    lista.remove(i);
                    lista.add(i, aux);
                    clicado = false;
                    reorganiza();
                    return;
                }
            }

        }
    }//GEN-LAST:event_JBbaixoActionPerformed

    private void JBremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBremoveActionPerformed
        int op = JOptionPane.showConfirmDialog(rootPane, "Você deseja mesmo excluir este bloco?", "EasyCode", JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            clicado = false;
            for (int i = 0; i < lista.size(); i++) {
                if (lista.get(i).equals(alterar)) {
                    lista.remove(i);
                    repaint();
                    reorganiza();
                }

            }
            for (int i = 0; i < listaVar.size(); i++) {
                if (listaVar.get(i).equals(alterar)) {
                    listaVar.remove(i);
                    repaint();
                    reorganiza();
                }
            }
        }
    }//GEN-LAST:event_JBremoveActionPerformed

    private void JBSetupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBSetupMouseEntered
        JBSetup.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBSetupMouseEntered

    private void JBSetupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBSetupMouseExited
        JBSetup.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBSetupMouseExited

    private void JBSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSetupActionPerformed
        BASetup b = new BASetup();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBSetupActionPerformed

    private void JBLoopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBLoopMouseEntered
        JBLoop.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBLoopMouseEntered

    private void JBLoopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBLoopMouseExited
        JBLoop.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBLoopMouseExited

    private void JBLoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBLoopActionPerformed
        BALoop b = new BALoop();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBLoopActionPerformed

    private void JBPinModeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBPinModeMouseEntered
        JBPinMode.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBPinModeMouseEntered

    private void JBPinModeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBPinModeMouseExited
        JBPinMode.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBPinModeMouseExited

    private void JBPinModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBPinModeActionPerformed
        BAPinMode b = new BAPinMode();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBPinModeActionPerformed

    private void JBFimArduinoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBFimArduinoMouseEntered
        JBFimArduino.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBFimArduinoMouseEntered

    private void JBFimArduinoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBFimArduinoMouseExited
        JBFimArduino.setBackground(new Color(255, 255, 255));

    }//GEN-LAST:event_JBFimArduinoMouseExited

    private void JBFimArduinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBFimArduinoActionPerformed
        BAFim b = new BAFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBFimArduinoActionPerformed

    private void JBDigitalWriteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBDigitalWriteMouseEntered
        JBDigitalWrite.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBDigitalWriteMouseEntered

    private void JBDigitalWriteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBDigitalWriteMouseExited
        JBDigitalWrite.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBDigitalWriteMouseExited

    private void JBDigitalWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDigitalWriteActionPerformed
        BADigitalWrite b = new BADigitalWrite();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBDigitalWriteActionPerformed

    private void JBAnalogReadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBAnalogReadMouseEntered
        JBAnalogRead.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBAnalogReadMouseEntered

    private void JBAnalogReadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBAnalogReadMouseExited
        JBAnalogRead.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBAnalogReadMouseExited

    private void JBAnalogReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAnalogReadActionPerformed
        BAAnalogRead b = new BAAnalogRead();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBAnalogReadActionPerformed

    private void JBAnalogWriteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBAnalogWriteMouseEntered
        JBAnalogWrite.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBAnalogWriteMouseEntered

    private void JBAnalogWriteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBAnalogWriteMouseExited
        JBAnalogWrite.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBAnalogWriteMouseExited

    private void JBAnalogWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAnalogWriteActionPerformed
        BAAnalogWrite b = new BAAnalogWrite();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBAnalogWriteActionPerformed

    private void JBDelayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBDelayMouseEntered
        JBDelay.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBDelayMouseEntered

    private void JBDelayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBDelayMouseExited
        JBDelay.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBDelayMouseExited

    private void JBDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDelayActionPerformed
        BAEsperar b = new BAEsperar();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBDelayActionPerformed

    private void JBDigitalReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDigitalReadActionPerformed
        BADigitalRead b = new BADigitalRead();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBDigitalReadActionPerformed

    private void JCBcompArduinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBcompArduinoActionPerformed
        // TODO add your handling code here:
        reorganiza();
        System.out.println(JCBcompArduino.isSelected());
    }//GEN-LAST:event_JCBcompArduinoActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        FEBuildComp.setDebugPath();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void JTValorInicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTValorInicialKeyPressed
        // TODO add your handling code here:
        int bt = evt.getKeyCode();
        if (bt == VK_ENTER) {
            JBvariavel.doClick();
        }
        if (evt.getModifiers() == KeyEvent.CTRL_MASK) {
            if (evt.getKeyCode() == KeyEvent.VK_1) {
                RBinteiro.doClick();
            } else if (evt.getKeyCode() == KeyEvent.VK_2) {
                RBreal.doClick();
            } else if (evt.getKeyCode() == KeyEvent.VK_3) {
                RBcaracter.doClick();
            }
        }
    }//GEN-LAST:event_JTValorInicialKeyPressed

    private void JBFimFacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBFimFacaActionPerformed
        BFacaEnquanto b = new BFacaEnquanto();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBFimFacaActionPerformed

    private void JBFimFacaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBFimFacaMouseExited
        // TODO add your handling code here:
        JBFimFaca.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_JBFimFacaMouseExited

    private void JBFimFacaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBFimFacaMouseEntered
        // TODO add your handling code here:
        JBFimFaca.setBackground(new Color(217, 255, 255));
    }//GEN-LAST:event_JBFimFacaMouseEntered

    private void JBSenaoFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSenaoFimActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        BSenaoFim b = new BSenaoFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBSenaoFimActionPerformed

    private void JBFimParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBFimParaActionPerformed
        // TODO add your handling code here:
        BParaFim b = new BParaFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBFimParaActionPerformed

    private void JBfimenquantoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBfimenquantoActionPerformed
        // TODO add your handling code here:
        BEnquantoFim b = new BEnquantoFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBfimenquantoActionPerformed

    private void JBFimEscolhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBFimEscolhaActionPerformed
        // TODO add your handling code here:
        BEscolhaFim b = new BEscolhaFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBFimEscolhaActionPerformed

    private void JBSeFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSeFimActionPerformed
        // TODO add your handling code here:
        BSeFim b = new BSeFim();
        lista.add(b);
        JPcampo.add(b);
        b.addMouseListener(this);
        //
        reorganiza();
        JPcampo.repaint();
    }//GEN-LAST:event_JBSeFimActionPerformed

    private void JBHelloWorld1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBHelloWorld1ActionPerformed
        // TODO add your handling code here:
        BRemover.doClick();
        JTTutorial1.setText(" { TUTORIAL }\n\n"
                + " 1 - Vá para sessão de blocos\n\n"
                + " 2 - Adicione o botão de início\n\n"
                + " 3 - Vá para sessão de funções\n\n"
                + " 4 - Adicione a função para escrever um texto\n\n"
                + " 5 - Digite \"Hello World \\n\" no campo adicionado\n\n"
                + " 6 - Volte para sessão de blocos\n\n"
                + " 7 - Adicione o botão de fim\n\n"
                + " 8 - Compile e execute o projeto, clicando no\n       botão verde que tem a seta\n\n");
    }//GEN-LAST:event_JBHelloWorld1ActionPerformed

    private void BTMImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTMImportarActionPerformed
        FEArquivo fe = new FEArquivo();
        try {
            fe.carregar(lista, listaVar);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        reorganiza();
    }//GEN-LAST:event_BTMImportarActionPerformed

    private void BTMSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTMSalvarActionPerformed
        FEArquivo arq = new FEArquivo();
        try {
            arq.salvar(lista);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BTMSalvarActionPerformed

    private void JBHelloWorld1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBHelloWorld1MouseEntered
        JBHelloWorld1.setBackground(new Color(0, 255, 0));
        JBHelloWorld1.setText("Clique em mim!");
    }//GEN-LAST:event_JBHelloWorld1MouseEntered

    private void JBHelloWorld1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBHelloWorld1MouseExited
        JBHelloWorld1.setBackground(new Color(180, 255, 180));
        JBHelloWorld1.setText("Clique aqui");
    }//GEN-LAST:event_JBHelloWorld1MouseExited

    private void txtVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Arduino;
    private javax.swing.JButton BRemover;
    private javax.swing.JMenuItem BTMImportar;
    private javax.swing.JMenuItem BTMLimparTudo;
    private javax.swing.JMenuItem BTMSair;
    private javax.swing.JMenuItem BTMSalvar;
    private javax.swing.JButton JBAnalogRead;
    private javax.swing.JButton JBAnalogWrite;
    private javax.swing.JButton JBDecrementa;
    private javax.swing.JButton JBDelay;
    private javax.swing.JButton JBDigitalRead;
    private javax.swing.JButton JBDigitalWrite;
    private javax.swing.JButton JBFimArduino;
    private javax.swing.JButton JBFimEscolha;
    private javax.swing.JButton JBFimFaca;
    private javax.swing.JButton JBFimPara;
    private javax.swing.JButton JBHelloWorld;
    private javax.swing.JButton JBHelloWorld1;
    private javax.swing.JButton JBIgual;
    private javax.swing.JButton JBIgualDivisao;
    private javax.swing.JButton JBIgualMultiplicacao;
    private javax.swing.JButton JBIgualSoma;
    private javax.swing.JButton JBIgualSubtracao;
    private javax.swing.JButton JBIncrementa;
    private javax.swing.JButton JBLoop;
    private javax.swing.JButton JBPinMode;
    private javax.swing.JButton JBSeFim;
    private javax.swing.JButton JBSenaoFim;
    private javax.swing.JButton JBSetup;
    private javax.swing.JButton JBbaixo;
    private javax.swing.JButton JBcaso;
    private javax.swing.JButton JBcasoFim;
    private javax.swing.JButton JBcima;
    private javax.swing.JButton JBconverte;
    private javax.swing.JButton JBenquanto;
    private javax.swing.JButton JBescolha;
    private javax.swing.JButton JBescrevaTxt;
    private javax.swing.JButton JBescrevaVar;
    private javax.swing.JButton JBfaca;
    private javax.swing.JButton JBfim;
    private javax.swing.JButton JBfimenquanto;
    private javax.swing.JButton JBinicio;
    private javax.swing.JButton JBleia;
    private javax.swing.JButton JBpara;
    private javax.swing.JButton JBremove;
    private javax.swing.JButton JBse;
    private javax.swing.JButton JBsenao;
    private javax.swing.JButton JBvariavel;
    private javax.swing.JCheckBox JCBcompArduino;
    private javax.swing.JPanel JPBlocos;
    private javax.swing.JPanel JPFuncoes;
    private javax.swing.JPanel JPOperadores;
    private javax.swing.JPanel JPbackground;
    private javax.swing.JPanel JPcampo;
    private javax.swing.JScrollPane JProlagem;
    private javax.swing.JTabbedPane JTPBlocos;
    private javax.swing.JTextArea JTTutorial;
    private javax.swing.JTextArea JTTutorial1;
    private javax.swing.JTextField JTValorInicial;
    private javax.swing.JRadioButton RBcaracter;
    private javax.swing.JRadioButton RBinteiro;
    private javax.swing.JRadioButton RBreal;
    private javax.swing.JTextArea TXTcompilador;
    private javax.swing.JPanel Variaveis;
    private javax.swing.JPanel background;
    private javax.swing.JTabbedPane barras;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtVar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {
//       for (Bloco b: lista) {
//           if (b.equals(e.getComponent())) {
//               cancela.setVisible(true);
//               cancela.setSize(16, 16);
//               cancela.setLocation(b.getX()+b.getWidth()+4,b.getY()+5);
//               remover = b;
//              
//               cima.setVisible(true);
//               cima.setSize(16, 16);
//               cima.setLocation(b.getX()+b.getWidth()+30,b.getY()+5);
//               
//               baixo.setVisible(true);
//               baixo.setSize(16, 16);
//               baixo.setLocation(b.getX()+b.getWidth()+46,b.getY()+5);
//               mover = b;
//           }
//       }
        for (Bloco b : lista) {
            if (clicado == false) {
                if (b.equals(e.getComponent())) {
                    b.setBorder(BorderFactory.createMatteBorder(0, 2, 0, 0, Color.BLACK));
                }
            }
        }
    }

    @Override
    public void mouseExited(MouseEvent e) {
        if (clicado == false) {
            for (Bloco b : lista) {
                if (b.equals(e.getComponent())) {
                    b.setBorder(BorderFactory.createEmptyBorder());
                }
            }
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (alterar != (Bloco) e.getComponent() && clicado == true) {
            return;
        }
        Bloco bl = (Bloco) e.getComponent();
        for (Bloco b : lista) {
            if (b == bl) {
                if (clicado == false) {
                    b.setBorder(BorderFactory.createLineBorder(Color.black, 2));
                    clicado = true;
                    alterar = bl;
                } else {
                    b.setBorder(BorderFactory.createEmptyBorder());
                    clicado = false;
                    alterar = null;
                }
            }
        }
    }

}
